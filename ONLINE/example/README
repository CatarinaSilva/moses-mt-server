
# create a complete configuration file "cfg_complete" by concatenating
# - cfg_env
# - cfg_data
# - either 	"cfg_decoder_Deterministic
# - or 		"cfg_decoder_Moses"
# - or 		"cfg_decoder_Moses_WA"
# - or 		"cfg_decoder_Moses_nbest"
# - either    "cfg_aligner_Constrained_Search" and "cfg_extractor_Constrained_Search"
# - or        "cfg_aligner_GIZA" and "cfg_extractor_Moses"
# - or        "cfg_aligner_onlineGIZA" and "cfg_extractor_Moses"
# - or        "cfg_aligner_IBM1" and "cfg_extractor_Moses"
# - either    "cfg_annotator_onlinexml"
# - or        "cfg_annotator_onlinecache"
# like for example:
cat cfg_env cfg_data cfg_decoder_Moses cfg_aligner_Constrained_Search cfg_extractor_Constrained_Search cfg_annotator_onlinexml  > cfg_complete
# or
cat cfg_env cfg_data cfg_decoder_Moses cfg_aligner_GIZA cfg_extractor_Moses cfg_annotator_onlinexml  > cfg_complete
# or
cat cfg_env cfg_data cfg_decoder_Moses cfg_aligner_onlineGIZA cfg_extractor_Moses cfg_annotator_onlinecache  > cfg_complete
# or
cat cfg_env cfg_data cfg_decoder_Moses cfg_aligner_IBM1 cfg_extractor_Moses cfg_annotator_onlinecache  > cfg_complete
# or
cat cfg_env cfg_data cfg_decoder_Moses_nbest cfg_aligner_IBM1 cfg_extractor_Moses cfg_annotator_onlinecache  > cfg_complete

# edit the complete configuration file "cfg_complete" with the actual data and executables

# run the wrapper for the online translation
python ../scripts/wrapper_onlineSMT.py cfg_complete
